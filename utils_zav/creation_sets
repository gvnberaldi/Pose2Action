import os
import random
from collections import defaultdict

# Define the paths to your data files and the output file
data_dir = "/data/iballester/datasets/BAD/f_depth_npz"
output_file = "/caa/Homes01/iballester/temp/sets.txt"

# List all data files
data_files = os.listdir(data_dir)

# Create dictionaries to store data for each person and class
person_data = defaultdict(list)
class_data = defaultdict(list)

# Parse the file names and organize the data
for file in data_files:
    if file.endswith(".npz"):
        parts = file.split("_")
        person = parts[0]
        print(parts[3])
        class_num = int(parts[3])
        start_frame = int(parts[4])
        end_frame = int(parts[5].split(".")[0])
            
        # Store data by person and class
        person_data[person].append(file)
        class_data[(person, class_num)].append(file)

# Define the percentages for training, validation, and testing
train_percent = 0.8
val_percent = 0.1
test_percent = 0.1

# Initialize dictionaries to store the split assignments for each group
person_split = defaultdict(str)
class_split = defaultdict(str)

# Iterate over each person and class
for person in person_data.keys():
    for class_ in range(1, 12):  # Assuming classes range from 1 to 11
        files = class_data[(person, class_)]
        random.shuffle(files)
        
        num_files = len(files)
        num_train = int(train_percent * num_files)
        num_val = int(val_percent * num_files)
        
        # Assign the splits for each file in this group
        for i, file in enumerate(files):
            if i < num_train:
                person_split[file] = "train"
                class_split[file] = "train"
            elif i < num_train + num_val:
                person_split[file] = "val"
                class_split[file] = "val"
            else:
                person_split[file] = "test"
                class_split[file] = "test"

# Write the split assignments to the output file
with open(output_file, "w") as f:
    for file_name in data_files:
        f.write(f"{file_name} {person_split[file_name]} {class_split[file_name]}\n")